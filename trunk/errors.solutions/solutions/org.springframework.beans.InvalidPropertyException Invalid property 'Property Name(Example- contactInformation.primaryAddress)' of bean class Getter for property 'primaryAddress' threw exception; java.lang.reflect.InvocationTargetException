Hi I am very new to Hibernate and I am doing some CRUD operaions. So I found how to create, update, delete and partial select statement. 
Why I said partial select means I have three entities called Person, CotactInformation and Address. 
Relationship between these three objects is Address is a foreign key in ContactInformation and the ContactInformation is the foreign key in Person. So now I know the Person ID and how can I get the record (Means I want Person, ContactInformation and Address Record) related to this Person ID. At present I am using

    Model model = (Model) this.getCurrentSession().get(
                this.getPersistentClass(), argId);
Here Persistent class is Person.class. So with this I am able to get the Person Record but I am not able to get the ContactInformation and Address records. See the below Image.

Solution is :
Here if you want to load properties eagerly you need to use "fetch = FetchType.Eager" if you are using Annotations. 
Or else if you are using hbm.xml you need to use "lazy="false"".

<many-to-one name="contactInformation"
			class="com.rise.common.model.ContactInformation" unique="true"
			not-null="true" column="CONTACT_INFORMATION_ID"  cascade="all" lazy="false"/>
			
<many-to-one name="primaryAddress" class="com.rise.common.model.Address"
			column="PRIMARY_ADDRESS_ID" cascade="all" not-null="true" unique="true"  lazy="false"
			
Approach 2:
Its a lengthy process. First you need to find the record By ID and after that you need to execute/get the references.

For Example:
	Person person = (Person) super.findById(argId);
    System.out.println(person.getContactInformation());
 	return person; 
 	
Please follow this link
http://stackoverflow.com/questions/2990799/difference-between-fetchtype-lazy-and-eager-in-java-persistence

Mine: http://stackoverflow.com/questions/17377316/get-the-record-by-id-in-hibernate